{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/myservice.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport{MyserviceService} from './myservice.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SimpleTask';\n  \n  constructor(private myservice: MyserviceService){}\n  \n  check=false;\n  obj ={\n    mobilenumber:'',\n    password:''\n  };\n  \n  post(data:any){\n  console.log(data);\n  this.myservice.post(data).subscribe(result=>{\n    this.obj.mobilenumber = '';\n    this.obj.password='';\n    alert(\"successfully posted\");\n  });\n\n}\n}\n","<div class=\"jumbotron bg-dark text-white\">\n<div class=\"row\">\n    <div class=\"col-xs-4 col-sm-4 col-md-4 col-lg-4 offset-4\">\n        <p class=\"text-capitalize text-center font-weight-bold h2 text-danger\">Login</p>\n        <form #ref=\"ngForm\" (ngSubmit)=\"post(ref.value)\">\n            <div class=\"form-group\">\n              <label class=\"text-capitalize text-center font-weight-bold \">Mobile Number :</label>\n              <input type=\"number\" class=\"form-control\" id=\"username\" required\n                aria-describedby=\"emailHelp\" placeholder=\"Mobile Number\" [(ngModel)]=\"obj.mobilenumber\" name=\"mobilenumber\">\n            </div>\n            <div class=\"form-group\">\n              <label  class=\"text-capitalize text-center font-weight-bold \">Password :</label>\n              <input type=\"{{check?'text':'password'}}\" class=\"form-control\" id=\"password\" placeholder=\"Password\" required [(ngModel)]=\"obj.password\" name=\"password\">\n              <input type=\"checkbox\" [(ngModel)]=\"check\" name=\"check\"><label>show password</label>\n            </div>\n            <div class=\"form-check\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!ref.valid\">Submit</button>\n          </form>\n    </div>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {MyserviceService} from './myservice.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,HttpClientModule\n  ],\n  providers: [MyserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyserviceService {\n\n  constructor(private http:HttpClient) { }\n\n  data:any;\n\n  post(data:any):Observable<any>{\n    console.log(data);\n    return this.http.post(`http://localhost:4000/data/post`,data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}